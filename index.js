"use strict";var _slicedToArray=function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return function(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")},_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};!function(){var srcmap={palette:[0,22,4,2],"icon-axe":[0,16,6,6],"icon-sword":[16,0,6,6],"icon-dagger":[6,16,6,6],"icon-shield":[16,6,6,6],"icon-bow":[12,16,6,6],"icon-hat":[18,16,6,6],piece:[0,0,16,16]};function extract(image,x,y,width,height){var canvas=document.createElement("canvas"),context=canvas.getContext("2d");return canvas.width=width,canvas.height=height,context.drawImage(image,-x,-y),canvas}function Canvas(width,height){var canvas=document.createElement("canvas");return canvas.width=width,canvas.height=height,canvas.getContext("2d")}function replace(image,oldColor,newColor){oldColor[3]||((oldColor=oldColor.slice())[3]=255),newColor[3]||((newColor=newColor.slice())[3]=255);for(var i=0;i<image.data.length;i+=4){for(var c=0;c<4&&image.data[i+c]===oldColor[c];c++);if(4===c)for(c=0;c<4;c++)image.data[i+c]=newColor[c]}return image}var units={fighter:"axe",knight:"shield",thief:"dagger",mage:"hat",soldier:"sword",archer:"bow"},matrix=[["white","cyan","blue","navy"],["black","pink","red","purple"]],mappings={pieces:{player:{light:"cyan",normal:"blue",dark:"navy"},enemy:{light:"pink",normal:"red",dark:"purple"}}};function match(image){for(var palette={},data=function(image){var canvas=document.createElement("canvas"),context=canvas.getContext("2d");return canvas.width=image.width,canvas.height=image.height,context.drawImage(image,0,0),context.getImageData(0,0,canvas.width,canvas.height)}(image),y=0;y<matrix.length;y++)for(var x=0;x<matrix[y].length;x++){var colorname=matrix[y][x];palette[colorname]=function(image,i,y){return i=4*(y*image.width+i),[image.data[i],image.data[1+i],image.data[2+i],image.data[3+i]]}(data,x,y)}return function assign(obj,mappings){for(var n in mappings)"object"===_typeof(mappings[n])?(obj[n]={},assign(obj[n],mappings[n])):obj[n]=palette[mappings[n]]}(palette,mappings),palette}function normalize(icons){var sprites=function disasm(sheet,srcmap){var sprites={};for(var id in srcmap){var x,y,w,h;Array.isArray(srcmap[id])?(h=_slicedToArray(srcmap[id],4),x=h[0],y=h[1],w=h[2],h=h[3],sprites[id]=extract(sheet,x,y,w,h)):sprites[id]=disasm(sheet,srcmap[id])}return sprites}(icons,srcmap),palette=match(sprites.palette),icons=function(sprites){return{axe:sprites["icon-axe"],bow:sprites["icon-bow"],dagger:sprites["icon-dagger"],hat:sprites["icon-hat"],shield:sprites["icon-shield"],sword:sprites["icon-sword"]}}(sprites);return{pieces:function(base,icons,palette){var faction,pieces={};for(faction in palette.pieces){pieces[faction]={};var unittype,subpal=palette.pieces[faction];for(unittype in units){var _piece=units[unittype],_piece=icons[_piece],_piece=function(piece,template,colors){var tmp=piece.getContext("2d").getImageData(0,0,piece.width,piece.height);replace(tmp,palette.white,colors.normal),replace(tmp,palette.black,colors.dark);piece=Canvas(piece.width,piece.height);piece.putImageData(tmp,0,0);tmp=Canvas(8,8),template=template.getContext("2d").getImageData(0,0,template.width,template.height);return replace(template,palette.white,colors.light),tmp.putImageData(template,0,0),piece.drawImage(tmp.canvas,5,5),replace(template,colors.light,colors.dark),tmp.putImageData(template,0,0),piece.drawImage(tmp.canvas,5,4),piece.canvas}(base,_piece,subpal);pieces[faction][unittype]=_piece}}return pieces}(sprites.piece,icons,palette)}}function init(view,actions_release){var actions_move=view.state,camera=actions_move.camera,pointer=actions_move.pointer;view.app=actions_release;var actions_resize=function(){var scaleX,canvas;scaleX=Math.max(1,Math.floor(window.innerWidth/view.native.width)),canvas=Math.max(1,Math.floor(window.innerHeight/view.native.height)),view.scale=Math.min(scaleX,canvas),view.width=Math.ceil(window.innerWidth/view.scale),view.height=Math.ceil(window.innerHeight/view.scale),(canvas=view.element).width=view.width,canvas.height=view.height,canvas.style.transform="scale("+view.scale+")",render(view)},actions_press=function(event){document.body.classList.add("-dragging"),pointer.position=getPosition(event),pointer.position&&(pointer.pressed={x:pointer.position.x-camera.x*view.scale,y:pointer.position.y-camera.y*view.scale})},actions_move=function(event){pointer.position=getPosition(event),pointer.position&&pointer.pressed&&(camera.x=(pointer.position.x-pointer.pressed.x)/view.scale,camera.y=(pointer.position.y-pointer.pressed.y)/view.scale,render(view))},actions_release=function(){document.body.classList.remove("-dragging"),pointer.pressed=null};function getPosition(y){var x=y.pageX||y.touches&&y.touches[0].pageX,y=y.pageY||y.touches&&y.touches[0].pageY;return void 0===x||void 0===y?null:{x:x,y:y}}actions_resize(),window.addEventListener("resize",actions_resize),window.addEventListener("mousedown",actions_press),window.addEventListener("mousemove",actions_move),window.addEventListener("mouseup",actions_release),window.addEventListener("touchstart",actions_press),window.addEventListener("touchmove",actions_move),window.addEventListener("touchend",actions_release)}function render(_iteratorError){var sprites=_iteratorError.sprites,_didIteratorError=_iteratorError.state.camera,canvas=_iteratorError.element,context=canvas.getContext("2d");context.fillStyle="black",context.fillRect(0,0,canvas.width,canvas.height);var center_x=Math.round(_iteratorError.width/2-64+_didIteratorError.x),center_y=Math.round(_iteratorError.height/2-64+_didIteratorError.y);context.fillStyle="#112";for(var i=0;i<8;i++)for(var x,y,j=0;j<8;j++){(j+i)%2&&(x=16*j+center_x,y=16*i+center_y,context.fillRect(x,y,16,16))}var app=_iteratorError.app,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=app.map.units[Symbol.iterator]();!(_iteratorNormalCompletion=(sprite=_iterator.next()).done);_iteratorNormalCompletion=!0){var unit=sprite.value,sprite=sprites.pieces[unit.faction][unit.type];context.drawImage(sprite,center_x+16*unit.x,center_y+16*unit.y-1)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}}var path,state=function(data){var map={units:[]},_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=data.units[Symbol.iterator]();!(_iteratorNormalCompletion2=(unit=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var unit=unit.value;map.units.push({type:unit.type,name:unit.name,faction:unit.faction,x:unit.position[0],y:unit.position[1]})}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}return{map:map}}({width:8,height:8,units:[{type:"knight",name:"Arthur",faction:"enemy",position:[3,3]},{type:"soldier",name:"Lance",faction:"enemy",position:[1,4]},{type:"mage",name:"Morgan",faction:"enemy",position:[2,6]},{type:"fighter",name:"Gilgas",faction:"player",position:[5,5]},{type:"thief",name:"Enki",faction:"player",position:[6,2]},{type:"archer",name:"Utna",faction:"player",position:[4,1]}]});path="sprites.png",new Promise(function(resolve,reject){var image=new Image;image.src=path,image.onload=function(){resolve(image)},image.onerror=function(){reject(new Error("Failed to load image `"+path+"`"))}}).then(function(view){view=function(width,height,sprites){return{width:window.innerWidth,height:window.innerHeight,native:{width:width,height:height},scale:1,sprites:sprites,element:document.createElement("canvas"),state:{camera:{x:0,y:0},pointer:{position:{x:0,y:0},pressed:null}},app:null}}(160,160,normalize(view));document.body.appendChild(view.element),init(view,state)})}();